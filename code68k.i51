       PROCEDURE DecodePMMUOrders;
CONST
   PMMUConds:ARRAY[0..15] OF String[2]=('BS','BC','LS','LC','SS','SC','AS','AC',
                                        'WS','WC','IS','IC','GS','GC','CS','CC');
VAR
   z,z1,z2:Byte;
   sk:String;
   Mask:Word;

       FUNCTION DecodeFC(Asc:String; VAR erg:Word):Boolean;
VAR
   Ok:Boolean;
   Val:Word;
BEGIN
   NLS_UpString(Asc);

   IF Asc='SFC' THEN
    BEGIN
     erg:=0; DecodeFC:=True; Exit;
    END;

   IF Asc='DFC' THEN
    BEGIN
     erg:=1; DecodeFC:=True; Exit;
    END;

   IF (Length(Asc)=2) AND (Asc[1]='D') AND ValReg(Asc[2]) THEN
    BEGIN
     DecodeFC:=True; erg:=Ord(Asc[2])-40; Exit;
    END;

   IF (Asc[1]='#') THEN
    BEGIN
     Delete(Asc,1,1); Val:=EvalIntExpression(Asc,Int4,OK);
     DecodeFC:=OK; IF OK THEN erg:=Val+16; Exit;
    END;

   DecodeFC:=False;
END;

       FUNCTION DecodePMMUReg(Asc:String; VAR erg:Word; VAR Size:Byte):Boolean;
CONST
   RegCnt=13;
   RegNames:ARRAY[0..RegCnt-1] OF String[5]=('TC' ,'DRP','SRP','CRP','CAL',
				             'VAL','SCC','AC' ,'PSR','PCSR',
					     'TT0','TT1','MMUSR');
   RegSizes:ARRAY[0..RegCnt-1] OF Byte=( 2, 3, 3, 3, 0,
                                         0, 0, 1, 1, 1,
					 2, 2, 1);
   RegCodes:ARRAY[0..RegCnt-1] OF Word=(16,17,18,19,20,
                                        21,22,23,24,25,
					 2, 3,24);
VAR
   z:Byte;
BEGIN
   NLS_UpString(Asc);
   IF (Length(Asc)=4) AND (Copy(Asc,1,3)='BAD') AND ValReg(Asc[4]) THEN
    BEGIN
     DecodePMMUReg:=True; Size:=1;
     erg:=$7000+((Ord(Asc[4])-48) SHL 2); Exit;
    END;
   IF (Length(Asc)=4) AND (Copy(Asc,1,3)='BAC') AND ValReg(Asc[4]) THEN
    BEGIN
     DecodePMMUReg:=True; Size:=1;
     erg:=$7400+((Ord(Asc[4])-48) SHL 2); Exit;
    END;
   z:=0;
   WHILE (z<RegCnt) AND (Asc<>RegNames[z]) DO Inc(z);
   DecodePMMUReg:=z<RegCnt;
   IF z<RegCnt THEN
    BEGIN
     Size:=RegSizes[z];
     erg:=RegCodes[z] SHL 10;
    END;
END;

BEGIN
   IF Memo('SAVE') THEN
    BEGIN
     IF ArgCnt<>1 THEN WrError(1110)
     ELSE IF AttrPart<>'' THEN WrError(1130)
     ELSE IF NOT FullPMMU THEN WrError(1500)
     ELSE
      BEGIN
       DecodeAdr(ArgStr[1],M3+M5+M6+M7+M10);
       IF AdrNum<>0 THEN
	BEGIN
	 CodeLen:=2+AdrCnt; WAsmCode[0]:=$f100 OR AdrMode;
	 CopyAdrVals(WAsmCode[1]); CheckSup;
	END;
      END;
     Exit;
    END;

   IF Memo('RESTORE') THEN
    BEGIN
     IF ArgCnt<>1 THEN WrError(1110)
     ELSE IF AttrPart<>'' THEN WrError(1130)
     ELSE IF NOT FullPMMU THEN WrError(1500)
     ELSE
      BEGIN
       DecodeAdr(ArgStr[1],M3+M4+M6+M7+M10);
       IF AdrNum<>0 THEN
	BEGIN
	 CodeLen:=2+AdrCnt; WAsmCode[0]:=$f140 OR AdrMode;
	 CopyAdrVals(WAsmCode[1]); CheckSup;
	END;
      END;
     Exit;
    END;

   IF Memo('FLUSHA') THEN
    BEGIN
     IF AttrPart<>'' THEN WrError(1130)
     ELSE IF ArgCnt<>0 THEN WrError(1110)
     ELSE
      BEGIN
       CodeLen:=4; WAsmCode[0]:=$f000; WAsmCode[1]:=$2400; CheckSup;
      END;
     Exit;
    END;

   IF Memo('FLUSH') OR Memo('FLUSHS') THEN
    BEGIN
     IF AttrPart<>'' THEN WrError(1130)
     ELSE IF (ArgCnt<>2) AND (ArgCnt<>3) THEN WrError(1110)
     ELSE IF (Memo('FLUSHS')) AND (NOT FullPMMU) THEN WrError(1500)
     ELSE IF NOT DecodeFC(ArgStr[1],WAsmCode[1]) THEN WrError(1710)
     ELSE
      BEGIN
       OpSize:=0;
       DecodeAdr(ArgStr[2],M11);
       IF AdrNum<>0 THEN
        BEGIN
         IF AdrVals[0]>15 THEN WrError(1720)
         ELSE
          BEGIN
           WAsmCode[1]:=WAsmCode[1] OR (AdrVals[0] SHL 5) OR $3000;
           IF OpPart='FLUSHS' THEN WAsmCode[1]:=WAsmCode[1] OR $400;
           WAsmCode[0]:=$f000; CodeLen:=4; CheckSup;
           IF ArgCnt=3 THEN
            BEGIN
             WAsmCode[1]:=WAsmCode[1] OR $800;
             DecodeAdr(ArgStr[3],M3+M6+M7+M10);
             IF AdrNum=0 THEN CodeLen:=0
             ELSE
              BEGIN
               WAsmCode[0]:=WAsmCode[0] OR AdrMode; Inc(CodeLen,AdrCnt);
               CopyAdrVals(WAsmCode[2]);
              END;
            END;
          END;
        END;
      END;
     Exit;
    END;

   IF Memo('FLUSHR') THEN
    BEGIN
     IF (AttrPart='') THEN OpSize:=3;
     IF (OpSize<>3) THEN WrError(1130)
     ELSE IF ArgCnt<>1 THEN WrError(1110)
     ELSE IF NOT FullPMMU THEN WrError(1500)
     ELSE
      BEGIN
       RelPos:=4;
       DecodeAdr(ArgStr[1],M3+M4+M5+M6+M7+M8+M9+M10+M11);
       IF AdrNum<>0 THEN
        BEGIN
         WAsmCode[0]:=$f000 OR AdrMode; WAsmCode[1]:=$a000;
         CopyAdrVals(WAsmCode[2]); CodeLen:=4+AdrCnt; CheckSup;
        END;
      END;
     Exit;
    END;

   IF Memo('LOADR') OR Memo('LOADW') THEN
    BEGIN
     IF (AttrPart<>'') THEN WrError(1130)
     ELSE IF ArgCnt<>2 THEN WrError(1110)
     ELSE IF NOT DecodeFC(ArgStr[1],WAsmCode[1]) THEN WrError(1710)
     ELSE
      BEGIN
       DecodeAdr(ArgStr[2],M3+M6+M7+M10);
       IF AdrNum<>0 THEN
        BEGIN
         WAsmCode[0]:=$f000 OR AdrMode; WAsmCode[1]:=WAsmCode[1] OR $2000;
         IF Memo('LOADR') THEN WAsmCode[1]:=WAsmCode[1] OR $200;
         CodeLen:=4+AdrCnt; CopyAdrVals(WAsmCode[2]); CheckSup;
        END;
      END;
     Exit;
    END;

   IF Memo('MOVE') OR Memo('MOVEFD') THEN
    BEGIN
     IF ArgCnt<>2 THEN WrError(1110)
     ELSE
      BEGIN
       IF DecodePMMUReg(ArgStr[1],WAsmCode[1],z) THEN
	BEGIN
	 WAsmCode[1]:=WAsmCode[1] OR $200;
	 IF AttrPart='' THEN OpSize:=z;
	 IF OpSize<>z THEN WrError(1130)
	 ELSE
	  BEGIN
           Mask:=Madri+Mdadri+Maix+Mabs;
           IF FullPMMU THEN
	    BEGIN
	     Inc(Mask,Mpost+Mpre);
             IF z<>3 THEN Inc(Mask,Mdata+Madr);
            END;
           DecodeAdr(ArgStr[2],Mask);
	   IF AdrNum<>0 THEN
	    BEGIN
	     WAsmCode[0]:=$f000 OR AdrMode;
	     CodeLen:=4+AdrCnt; CopyAdrVals(WAsmCode[2]);
             CheckSup;
	    END;
	  END;
	END
       ELSE IF DecodePMMUReg(ArgStr[2],WAsmCode[1],z) THEN
	BEGIN
	 IF AttrPart='' THEN OpSize:=z;
	 IF OpSize<>z THEN WrError(1130)
	 ELSE
	  BEGIN
           RelPos:=4;
           Mask:=Madri+Mdadri+Maix+Mabs;
           IF FullPMMU THEN
	    BEGIN
	     Inc(Mask,Mpost+Mpre+Mpc+Mpcidx+Mimm);
             IF z<>3 THEN Inc(Mask,Mdata+Madr);
            END;
           DecodeAdr(ArgStr[1],Mask);
	   IF AdrNum<>0 THEN
	    BEGIN
	     WAsmCode[0]:=$f000 OR AdrMode;
	     CodeLen:=4+AdrCnt; CopyAdrVals(WAsmCode[2]);
             IF OpPart='MOVEFD' THEN WAsmCode[1]:=WAsmCode[1]+$100;
             CheckSup;
	    END;
	  END;
	END
       ELSE WrError(1730);
      END;
     Exit;
    END;

   IF Memo('TESTR') OR Memo('TESTW') THEN
    BEGIN
     IF AttrPart<>'' THEN WrError(1130)
     ELSE IF (ArgCnt>4) OR (ArgCnt<3) THEN WrError(1110)
     ELSE
      BEGIN
       IF NOT DecodeFC(ArgStr[1],WAsmCode[1]) THEN WrError(1710)
       ELSE
        BEGIN
         DecodeAdr(ArgStr[2],M3+M6+M7+M10);
         IF AdrNum<>0 THEN
          BEGIN
           WAsmCode[0]:=$f000 OR AdrMode; CodeLen:=4+AdrCnt;
           WAsmCode[1]:=WAsmCode[1] OR $8000;
           CopyAdrVals(WAsmCode[2]);
           IF OpPart='TESTR' THEN WAsmCode[1]:=WAsmCode[1] OR $200;
           DecodeAdr(ArgStr[3],M11);
           IF AdrNum<>0 THEN
            IF AdrVals[0]>7 THEN
             BEGIN
              WrError(1740); CodeLen:=0;
             END
            ELSE
             BEGIN
              WAsmCode[1]:=WAsmCode[1] OR (AdrVals[0] SHL 10);
              IF ArgCnt=4 THEN
               BEGIN
                DecodeAdr(ArgStr[4],M2);
                IF AdrNum=0 THEN CodeLen:=0
                ELSE WAsmCode[1]:=WAsmCode[1] OR (AdrMode SHL 5); CheckSup;
               END;
             END
           ELSE CodeLen:=0;
          END;
        END;
      END;
     Exit;
    END;

   IF Memo('VALID') THEN
    BEGIN
     IF ArgCnt<>2 THEN WrError(1110)
     ELSE IF NOT FullPMMU THEN WrError(1500)
     ELSE IF (AttrPart<>'') AND (OpSize<>2) THEN WrError(1130)
     ELSE
      BEGIN
       DecodeAdr(ArgStr[2],M3+M6+M7+M10);
       IF AdrNum<>0 THEN
        BEGIN
         WAsmCode[0]:=$f000 OR AdrMode;
         WAsmCode[1]:=$2800; CodeLen:=4+AdrCnt;
         CopyAdrVals(WAsmCode[1]);
         IF NLS_StrCaseCmp(ArgStr[1],'VAL')=0 THEN
         ELSE
          BEGIN
           DecodeAdr(ArgStr[1],M2);
           IF AdrNum<>0 THEN
            BEGIN
             WAsmCode[1]:=WAsmCode[1] OR $400 OR (AdrMode AND 7);
            END
           ELSE CodeLen:=0;
          END;
        END;
      END;
     Exit;
    END;

   IF (OpPart[1]='B') THEN
    BEGIN
     Delete(OpPart,1,1);
     z:=0;
     WHILE (z<16) AND (PMMUConds[z]<>OpPart) DO Inc(z);
     IF z=16 THEN WrError(1360)
     ELSE
      BEGIN
       IF (OpSize<>1) AND (OpSize<>2) AND (OpSize<>6) THEN WrError(1130)
       ELSE IF ArgCnt<>1 THEN WrError(1110)
       ELSE IF NOT FullPMMU THEN WrError(1500)
       ELSE
	BEGIN

	 HVal:=EValIntExpression(ArgStr[1],Int32,ValOK)-(EProgCounter+2);
	 HVal16:=HVal;

	 IF OpSize=1 THEN
	  BEGIN
	   IF HVal16=HVal THEN OpSize:=2 ELSE OpSize:=6;
	  END;

	 IF OpSize=2 THEN
	  BEGIN
           IF (HVal16<>HVal) AND (NOT SymbolQuestionable) THEN WrError(1370)
	   ELSE
	    BEGIN
	     CodeLen:=4; WAsmCode[0]:=$f080 OR z;
	     WAsmCode[1]:=HVal16; CheckSup;
	    END;
	  END
	 ELSE
	  BEGIN
	   CodeLen:=6; WAsmCode[0]:=$f0c0 OR z;
	   WAsmCode[2]:=HVal AND $ffff; WAsmCode[1]:=HVal SHR 16;
	   CheckSup;
	  END;
	END;
      END;
     Exit;
    END;

   IF (Copy(OpPart,1,2)='DB') THEN
    BEGIN
     Delete(OpPart,1,2);
     z:=0;
     WHILE (z<16) AND (PMMUConds[z]<>OpPart) DO Inc(z);
     IF z=16 THEN WrError(1360)
     ELSE
      BEGIN
       IF (OpSize<>1) AND (AttrPart<>'') THEN WrError(1130)
       ELSE IF ArgCnt<>2 THEN WrError(1110)
       ELSE IF NOT FullPMMU THEN WrError(1500)
       ELSE
        BEGIN
         DecodeAdr(ArgStr[1],M1);
         IF AdrNum<>0 THEN
          BEGIN
           WAsmCode[0]:=$f048 OR AdrMode; WAsmCode[1]:=z;
           HVal:=EValIntExpression(ArgStr[2],Int32,ValOK)-(EProgCounter+4);
           IF ValOK THEN
            BEGIN
             HVal16:=HVal; WAsmCode[2]:=HVal16;
             IF (HVal16<>HVal) AND (NOT SymbolQuestionable) THEN WrError(1370) ELSE CodeLen:=6; CheckSup;
            END;
          END;
        END;
      END;
     Exit;
    END;

   IF (OpPart[1]='S') THEN
    BEGIN
     Delete(OpPart,1,1);
     z:=0;
     WHILE (z<16) AND (PMMUConds[z]<>OpPart) DO Inc(z);
     IF z=16 THEN WrError(1360)
     ELSE
      BEGIN
       IF (OpSize<>0) AND (AttrPart<>'') THEN WrError(1130)
       ELSE IF ArgCnt<>1 THEN WrError(1110)
       ELSE IF NOT FullPMMU THEN WrError(1500)
       ELSE
        BEGIN
         DecodeAdr(ArgStr[1],M1+M3+M4+M5+M6+M7+M10);
         IF AdrNum<>0 THEN
          BEGIN
           CodeLen:=4+AdrCnt; WAsmCode[0]:=$f040 OR AdrMode;
           WAsmCode[1]:=z; CopyAdrVals(WAsmCode[2]); CheckSup;
          END;
        END;
      END;
     Exit;
    END;

   IF (Copy(OpPart,1,4)='TRAP') THEN
    BEGIN
     Delete(OpPart,1,4);
     z:=0;
     WHILE (z<16) AND (PMMUConds[z]<>OpPart) DO Inc(z);
     IF z=16 THEN WrError(1360)
     ELSE
      BEGIN
       IF (AttrPart='') THEN OpSize:=0;
       IF OpSize>2 THEN WrError(1130)
       ELSE IF ((OpSize=0)AND(ArgCnt<>0))OR((OpSize<>0)AND(ArgCnt<>1)) THEN WrError(1110)
       ELSE IF NOT FullPMMU THEN WrError(1500)
       ELSE
        BEGIN
         WAsmCode[0]:=$f078; WAsmCode[1]:=z;
         IF OpSize=0 THEN
          BEGIN
           WAsmCode[0]:=WAsmCode[0] OR 4; CodeLen:=4; CheckSup;
          END
         ELSE
          BEGIN
           DecodeAdr(ArgStr[1],M11);
           IF AdrNum<>0 THEN
            BEGIN
             WAsmCode[0]:=WAsmCode[0] OR (OpSize+1);
             CopyAdrVals(WAsmCode[2]); CodeLen:=4+AdrCnt; CheckSup;
            END;
          END;
        END;
      END;
     Exit;
    END;

   WrError(1200);
END;

